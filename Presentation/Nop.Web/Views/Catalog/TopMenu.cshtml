@model TopMenuModel

@using Nop.Web.Models.Catalog;

@helper RenderCategoryLine(CategorySimpleModel category, int level, bool responsiveMobileMenu)
{
var categoryService = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Services.Catalog.ICategoryService>();
var pictureService = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Services.Media.IPictureService>
    ();
var categoryEntity = categoryService.GetCategoryById(category.Id);
var categoryImageUrl = pictureService.GetPictureUrl(categoryEntity.PictureId, 70);

    <li>
        @if (level > 0)
        {
            <img src="@categoryImageUrl" alt="" title="@category.Name" />
            <a href="@Url.RouteUrl("Category", new { SeName = category.SeName }) "> @category.Name
            @if (category.NumberOfProducts.HasValue)
            {
                <text> @T("Categories.TotalProducts", category.NumberOfProducts.Value)</text>
            }
            </a>
        }
        else
        {
            <a href="#" class="is_active">
                @category.Name
                @if (category.NumberOfProducts.HasValue)
                {
                    <text> @T("Categories.TotalProducts", category.NumberOfProducts.Value)</text>
                }
            </a>
        }
               
            @{
                //subcategories
                var subCategories = responsiveMobileMenu ?
                    //responsive (all categories)
                    category.SubCategories :
                    //standard design (only categories with "IncludeInTopMenu")
                    category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

                var levelClass = "";
                if (level == 0)
                {
                    levelClass = "first-level";
                }
                if (subCategories.Count > 0)
                {
                    <div class="sublist-toggle"></div>
                    <ul class="sublist @levelClass">
                        @foreach (var subCategory in subCategories)
                        {
                         
                            @RenderCategoryLine(subCategory, level + 1, responsiveMobileMenu)
                        }
                    </ul>
                }
            }
</li>
}

@*@foreach (var topic in Model.Topics)
{
    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
}*@
<ul class="top-menu">
    @Html.Widget("header_menu_before")
    @{
        var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
    }
    @foreach (var category in rootCategories)
    {
        @RenderCategoryLine(category, 0, false)
    }
    @Html.Widget("header_menu_after")
</ul>

@*//mobile*@

@{
    var rootCategoriesResponsive = Model.Categories.ToList();
    //name it "Categories" if we have only categories. Otherwise, "Menu"
    var responsiveMenuTitle = (rootCategoriesResponsive.Count > 0 && Model.Topics.Count == 0) ? T("Categories") : T("Menu");
    <div class="menu-toggle">@responsiveMenuTitle</div>
    <ul class="top-menu mobile">
        @Html.Widget("mob_header_menu_before")
        @foreach (var category in rootCategoriesResponsive)
        {
            @RenderCategoryLine(category, 0, true)
        }
  
        @foreach (var topic in Model.Topics)
        {
            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
        }
        @if (rootCategoriesResponsive.Count == 0 && Model.Topics.Count == 0)
        {
            //no categories or topis to display? in this case let's diplay some default menu items (should we?)
            <li><a href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
            if (Model.NewProductsEnabled)
            {
                <li>
                    <a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a>
                </li>
            }
            <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
        }
        @Html.Widget("mob_header_menu_after")
    </ul>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.menu-toggle').click(function () {
                $(this).siblings('.top-menu.mobile').slideToggle('slow');
            });
            $('.top-menu.mobile .sublist-toggle').click(function () {
                $(this).siblings('.sublist').slideToggle('slow');
            });
        });
    </script>
}

<script>
    $(document).ready(function () {
        $(".top-menu li").click(function () {
            $('li > ul').not($(this).children("ul").toggle()).hide();
            $(".banner").toggleClass('fix');
            $(".headtitle").toggleClass('fix');
        });
    });
</script>